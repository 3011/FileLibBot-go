name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build Linux version
      run: go build -o FileLibBot-go ./cmd/.

    # - name: Build macOS version
    #   run: CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o FileLibBot-go_macos

    # - name: Build Windows version
    #   run: CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o FileLibBot-go_windows

    # 第三步：发布 Release
    - name: Create Release # 创建Release，可以在仓库看到一个个版本
      id: create_release
      uses: actions/create-release@main
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }} # 之前GitHub添加的Token
      with:
        tag_name: ${{ github.run_number }} # (tag)标签名称
        release_name: Release ${{ github.run_number }}
        draft: false # 是否是草稿
        prerelease: false # 是否是预发布

    # 第四步：上传构建结果到 Release（把打包的tgz上传到Release）
    - name: Upload Release Asset Linux
      uses: actions/upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
        asset_path: ./FileLibBot-go # 要上传文件
        asset_name: FileLibBot-go # 上传后的文件名
        asset_content_type: application/octet-stream

      
    # - name: Upload Release Asset macOS
    #   uses: actions/upload-release-asset@main
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
    #     asset_path: ./FileLibBot-go_macos # 要上传文件
    #     asset_name: FileLibBot-go_macos # 上传后的文件名
    #     asset_content_type: application/octet-stream

    # - name: Upload Release Asset Windows
    #   uses: actions/upload-release-asset@main
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
    #     asset_path: ./FileLibBot-go_windows # 要上传文件
    #     asset_name: FileLibBot-go_windows # 上传后的文件名
    #     asset_content_type: application/octet-stream